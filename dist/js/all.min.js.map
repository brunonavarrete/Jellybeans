{"version":3,"sources":["all.js"],"names":["app","angular","module","service","$http","this","helloWorld","alert","getGuesses","callback","get","then","getResults","controller","$scope","dataService","user","guesses","currentForm","res","data","addGuess","title","guess","names","results","i","push","email","generateChart","chart","ctx","document","getElementById","getContext","innerHTML","Chart","type","labels","datasets","label","fill","borderColor","lineTension","pointRadius","options","directive","templateUrl"],"mappings":"CAAC,WACA,aACA,IAAIA,EAAMC,QAAQC,OAAO,iBAEzBF,EAAIG,QAAQ,eAAe,QAAQ,SAAUC,GAC5CC,KAAKC,WAAa,WACjBC,MAAM,iBAGPF,KAAKG,WAAa,SAAUC,GAC3BL,EAAMM,IAAI,qBACTC,KAAMF,IAGRJ,KAAKO,WAAa,SAAUH,GAC3BL,EAAMM,IAAI,mBACTC,KAAMF,OAITT,EAAIa,WAAW,YAAY,SAAS,cAAc,SAAUC,EAAQC,GACnED,EAAOE,MACNC,YAEDH,EAAOI,YAAc,EAErBH,EAAYP,WAAW,SAASW,GAC/BL,EAAOG,QAAUE,EAAIC,OAGtBN,EAAOO,SAAW,SAASC,EAAMC,GAChCT,EAAOE,KAAKC,QAAQK,GAASC,EAC7BT,EAAOI,kBAKTlB,EAAIa,WAAW,aAAa,SAAS,cAAc,SAAUC,EAAQC,GAKpED,EAAOU,SAEPT,EAAYH,WAAW,SAASO,GAC/BL,EAAOW,QAAUN,EAAIC,KACrB,IAAK,IAAIM,EAAI,EAAGA,EAAI,GAAIA,IACvBZ,EAAOU,MAAMG,KAAKb,EAAOW,QAAQC,GAAGE,SAItCd,EAAOe,cAAgB,SAASC,GAC/B,IAAIC,EAAMC,SAASC,eAAe,WAAWC,WAAW,MACxDH,EAAII,UAAY,MACF,IAAIC,MAAML,GACpBM,KAAQ,OACRjB,MACIkB,QAAW,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,QAC1EC,WACIC,MAAS,SACTpB,MAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACpCqB,MAAQ,EACRC,YAAe,gBACfC,YAAe,KAEfH,MAAS,UACTpB,MAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACpCqB,MAAQ,EACRC,YAAe,oBACfC,YAAe,GACfC,YAAe,IAEfJ,MAAS,iBACTpB,MAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACpCqB,MAAQ,EACRC,YAAe,iBACfC,YAAe,GACfC,YAAe,KAGvBC,iBAQN7C,EAAI8C,UAAU,aAAa,WAC1B,OACCC,YAAa,+BACblC,WAAY,cAIdb,EAAI8C,UAAU,UAAU,WACvB,OACCC,YAAa,0BACblC,WAAY,eAlGd","file":"all.min.js","sourcesContent":["!(function(){\n\t'use strict';\n\tvar app = angular.module('jellybeans',[]);\n\n\tapp.service('dataService',['$http',function( $http ){ // '$http' to avoid .min.js problem\n\t\tthis.helloWorld = function(){\n\t\t\talert('hello world!');\n\t\t}\n\n\t\tthis.getGuesses = function( callback ){\n\t\t\t$http.get('data/guesses.json')\n\t\t\t.then( callback );\n\t\t}\n\n\t\tthis.getResults = function( callback ){\n\t\t\t$http.get('data/users.json')\n\t\t\t.then( callback );\n\t\t}\n\t}]);\n\n\tapp.controller('mainCtrl',['$scope','dataService',function( $scope, dataService ){ // '$scope', 'dataService' to avoid .min.js problem\n\t\t$scope.user = {\n\t\t\tguesses: {}\n\t\t};\n\t\t$scope.currentForm = 0;\n\n\t\tdataService.getGuesses(function(res){\n\t\t\t$scope.guesses = res.data;\n\t\t});\n\n\t\t$scope.addGuess = function(title,guess){\n\t\t\t$scope.user.guesses[title] = guess;\n\t\t\t$scope.currentForm++;\n\t\t};\n\n\t}]);\n\n\tapp.controller('chartCtrl',['$scope','dataService',function( $scope, dataService ){ // '$scope', 'dataService' to avoid .min.js problem\n\n\t\t// $scope.currentChart = 'mms';\n\t\t// $scope['mms'] = [];\n\n\t\t$scope.names = [];\n\n\t\tdataService.getResults(function(res){\n\t\t\t$scope.results = res.data;\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\t$scope.names.push($scope.results[i].email);\n\t\t\t};\n\t\t});\n\n\t\t$scope.generateChart = function(chart){\n\t\t\tvar ctx = document.getElementById(\"myChart\").getContext('2d');\n\t\t\tctx.innerHTML = 'wii';\n\t\t\tvar myChart = new Chart(ctx, {\n\t\t\t    \"type\": \"line\",\n\t\t\t    \"data\": {\n\t\t\t        \"labels\": ['Name','Name','Name','Name','Name','Name','Name','Name','Name','Name'],\n\t\t\t        \"datasets\": [{\n\t\t\t            \"label\": 'Label1',\n\t\t\t            \"data\": [30,30,30,30,30,30,30,30,30,30],\n\t\t\t            \"fill\": true,\n\t\t\t            \"borderColor\": \"rgb(0,0, 192)\",\n\t\t\t            \"lineTension\": 0.1\n\t\t\t        }, {\n\t\t\t            \"label\": \"Average\",\n\t\t\t            \"data\": [30,30,30,30,30,30,30,30,30,30],\n\t\t\t            \"fill\": false,\n\t\t\t            \"borderColor\": \"rgb(75, 192, 192)\",\n\t\t\t            \"lineTension\": 0.1,\n\t\t\t            \"pointRadius\": 0\n\t\t\t        }, {\n\t\t\t            \"label\": \"Correct answer\",\n\t\t\t            \"data\": [45,45,45,45,45,45,45,45,45,45],\n\t\t\t            \"fill\": false,\n\t\t\t            \"borderColor\": \"rgb(255,255,0)\",\n\t\t\t            \"lineTension\": 0.1,\n\t\t\t            \"pointRadius\": 0\n\t\t\t        }]\n\t\t\t    },\n\t\t\t    \"options\": {}\n\t\t\t});\n\t\t};\n\n\n\n\t}]);\n\n\tapp.directive('jellybeans',function(){\n\t\treturn {\n\t\t\ttemplateUrl: '../templates/jellybeans.html',\n\t\t\tcontroller: 'mainCtrl',\n\t\t}\n\t});\n\n\tapp.directive('results',function(){\n\t\treturn {\n\t\t\ttemplateUrl: '../templates/chart.html',\n\t\t\tcontroller: 'chartCtrl',\n\t\t}\n\t});\n\n})();\n!(function(){\n\t// var users = {};\n\t// function loadJSON(path, success, error){\n\t//     var xhr = new XMLHttpRequest();\n\t//     xhr.onreadystatechange = function()\n\t//     {\n\t//         if (xhr.readyState === XMLHttpRequest.DONE) {\n\t//             if (xhr.status === 200) {\n\t//                 if (success)\n\t//                     success(JSON.parse(xhr.responseText));\n\t//             } else {\n\t//                 if (error)\n\t//                     error(xhr);\n\t//             }\n\t//         }\n\t//     };\n\t//     xhr.open(\"GET\", path, true);\n\t//     xhr.send();\n\t// }\n\n\t// var jsonPromise = new Promise(function(res, rej){\n\t// \tloadJSON('../data/users.json',\n\t//         function(data){res(data);},\n\t//         function(xhr){console.error(xhr);}\n\t// \t)\n\t// });\n\n\t// jsonPromise.then(function(users){\n\t// \tusers.names = [];\n\t// \tusers.mms = [];\n\t// \tusers.toothpicks = [];\n\t// \tusers.skittles = [];\n\t// \tusers.coins = [];\n //    \tfor (var i = 0; i < users.length; i++) {\n //    \t\tusers.names.push(users[i].email);\n //    \t\tusers.mms.push(users[i].mms);\n //    \t\tusers.toothpicks.push(users[i].toothpicks);\n //    \t\tusers.skittles.push(users[i].skittles);\n //    \t\tusers.coins.push(users[i].coins);\n //    \t};\n //    \treturn users;\n\t// }).then(function(users){\n\t// \tfunction createChart(canvasId,data){\n\t// \t\tvar sum = 0;\n\t// \t\tfor (var i = 0; i < data.length; i++) {\n\t// \t\t\tsum += parseInt(data[i],10); // decimal base\n\t// \t\t}\n\n\t// \t\tvar avg = sum/data.length;\n\t// \t\tvar avgArray = [];\n\t// \t\tfor (var i = 0; i < data.length; i++) {\n\t// \t\t\tavgArray.push(avg);\n\t// \t\t};\n\n\t// \t\tvar ctx = document.getElementById('myChart').getContext('2d');\n\t// \t\tvar myChart = new Chart(ctx, {\n\t// \t\t    \"type\": \"line\",\n\t// \t\t    \"data\": {\n\t// \t\t        \"labels\": users.names,\n\t// \t\t        \"datasets\": [{\n\t// \t\t            \"label\": \"User M&Ms guesses\",\n\t// \t\t            \"data\": data,\n\t// \t\t            \"fill\": true,\n\t// \t\t            \"borderColor\": \"rgb(0,0, 192)\",\n\t// \t\t            \"lineTension\": 0.1\n\t// \t\t        }, {\n\t// \t\t            \"label\": \"Average\",\n\t// \t\t            \"data\": avgArray,\n\t// \t\t            \"fill\": false,\n\t// \t\t            \"borderColor\": \"rgb(75, 192, 192)\",\n\t// \t\t            \"lineTension\": 0.1,\n\t// \t\t            \"pointRadius\": 0\n\t// \t\t        }, {\n\t// \t\t            \"label\": \"Correct answer\",\n\t// \t\t            \"data\": [45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45],\n\t// \t\t            \"fill\": false,\n\t// \t\t            \"borderColor\": \"rgb(255,255,0)\",\n\t// \t\t            \"lineTension\": 0.1,\n\t// \t\t            \"pointRadius\": 0\n\t// \t\t        }\n\t// \t\t        ]\n\t// \t\t    },\n\t// \t\t    \"options\": {\n\n\t// \t\t    }\n\t// \t\t});\n\t// \t}\n\t// \tcreateChart('m&ms',users.mms);\n\t// \t// createChart('toothpicks',users.toothpicks);\n\t// \t// createChart('skittles',users.skittles);\n\t// \t// createChart('coins',users.coins);\n\t// })\n\n\t// var ctx = document.getElementById(\"myChart\").getContext('2d');\n\t// var myChart = new Chart(ctx, {\n\t//     \"type\": \"line\",\n\t//     \"data\": {\n\t//         \"labels\": users.names,\n\t//         \"datasets\": [{\n\t//             \"label\": \"My First Dataset\",\n\t//             \"data\": [74,83,11,18,80,95,19,14,29,78],\n\t//             \"fill\": true,\n\t//             \"borderColor\": \"rgb(0,0, 192)\",\n\t//             \"lineTension\": 0.1\n\t//         }, {\n\t//             \"label\": \"Average\",\n\t//             \"data\": [30,30,30,30,30,30,30,30,30,30],\n\t//             \"fill\": false,\n\t//             \"borderColor\": \"rgb(75, 192, 192)\",\n\t//             \"lineTension\": 0.1,\n\t//             \"pointRadius\": 0\n\t//         }, {\n\t//             \"label\": \"Correct answer\",\n\t//             \"data\": [45,45,45,45,45,45,45,45,45,45],\n\t//             \"fill\": false,\n\t//             \"borderColor\": \"rgb(255,255,0)\",\n\t//             \"lineTension\": 0.1,\n\t//             \"pointRadius\": 0\n\t//         }]\n\t//     },\n\t//     \"options\": {\n\n\t//     }\n\t// });\n})();\n\n"]}